### INFO
#   @site           :   https://hassiohelp.eu/
#   @author         :   Caio - https://github.com/caiosweet
#                   :   Gianpi - https://github.com/jumping2000
#   @date           :   Started 01/11/2019 - Updated 04/06/2023
#   @description    :   Package for Appdaemon Notifier Center
#                       https://github.com/jumping2000/notifier
#   @package        :   Notification HUB - Centro Notifiche üîî
#   @last_release   :   https://api.github.com/repos/caiosweet/Package-Notification-HUB-AppDaemon/releases/latest
############################################################################

#######################################-#######################################
##                                 CUSTOMIZE
#######################################-#######################################
homeassistant:
  customize:
    ## NODE ANCHORS
    package.cn:
      version: "5.0.4"
      customize: &customize
        package: "Centro Notifiche üîî"
        site: "hassiohelp.eu üåê"
        author: "Caio & Gianpi"

    ## AUTOMATION
    automation.notifier_startup_configuration:
      <<: *customize
      friendly_name: "Notifier Startup"
    ## BINARY SENSOR
    binary_sensor.notifier_dnd:
      <<: *customize
      friendly_name: "Modo Silenzioso"
    binary_sensor.notifier_people_home:
      <<: *customize
      friendly_name: "Persone in casa"
    button.notifier_last_message:
      <<: *customize
      friendly_name: "Ultimo Messaggio"
      icon: mdi:repeat-once
    ## GROUP
    group.notifier_automations:
      <<: *customize
      friendly_name: "Automazioni Notifier"
      icon: mdi:home-automation
    group.notifier_location_tracker:
      <<: *customize
      friendly_name: "Dispositivi tracciati"
      icon: mdi:target-account
    group.notifier_group_volumes:
      <<: *customize
      friendly_name: "Volumi"
      icon: mdi:knob
    group.notifier_group_notification:
      <<: *customize
      friendly_name: "Gruppo notifiche"
      icon: mdi:message-badge
    ## INPUT BOOLEAN
    input_boolean.notifier_guest_mode:
      <<: *customize
      friendly_name: "Modo Ospite"
      icon: mdi:account-multiple-plus
    input_boolean.notifier_holidays:
      <<: *customize
      friendly_name: "Modo Vacanza"
      icon: mdi:beach
    input_boolean.notifier_html_mode:
      <<: *customize
      friendly_name: "Modo Markdown/Html"
      icon: mdi:language-html5 #language-markdown
    input_boolean.notifier_phone_notifications:
      <<: *customize
      friendly_name: "Notifiche VoIP"
      icon: mdi:phone-in-talk
    input_boolean.notifier_priority_message:
      <<: *customize
      friendly_name: "Modo Prioritario"
      icon: mdi:alarm-light
    input_boolean.notifier_screen_notifications:
      <<: *customize
      friendly_name: "Notifiche Persistenti"
      icon: mdi:dock-left #mdi:message-bulleted
    input_boolean.notifier_speech_notifications:
      <<: *customize
      friendly_name: "Notifiche Vocali"
      icon: mdi:account-tie-voice
    input_boolean.notifier_text_notifications:
      <<: *customize
      friendly_name: "Notifiche Testo"
      icon: mdi:cellphone-message
    input_boolean.notifier_tts_clock:
      <<: *customize
      friendly_name: "Orario in TTS App"
      icon: mdi:message-text-clock
    input_boolean.notifier_wrap_text:
      <<: *customize
      friendly_name: "Testo a capo"
      icon: mdi:wrap
    ## INPUT BUTTON
    input_button.notifier_reset_config:
      <<: *customize
      friendly_name: "Reset Configurazione"
    ## INPUT DATETIME
    input_datetime.notifier_start_early_morning:
      <<: *customize
      friendly_name: "Inizio Mattina Presto"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_morning:
      <<: *customize
      friendly_name: "Inizio Mattina"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_afternoon:
      <<: *customize
      friendly_name: "Inizio Pomeriggio"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_evening:
      <<: *customize
      friendly_name: "Inizio Sera"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_night:
      <<: *customize
      friendly_name: "Inizio Notte"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_late_night:
      <<: *customize
      friendly_name: "Inizio Notte Fonda"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_weekdays:
      <<: *customize
      friendly_name: "Inizio DND Feriali"
    input_datetime.notifier_end_weekdays:
      <<: *customize
      friendly_name: "Fine DND Feriali"
    input_datetime.notifier_start_holidays:
      <<: *customize
      friendly_name: "Inizio DND Festivi"
    input_datetime.notifier_end_holidays:
      <<: *customize
      friendly_name: "Fine DND Festivi"
    ## INPUT NUMBER
    input_number.notifier_early_morning_volume:
      <<: *customize
      friendly_name: "Vol Mattina Presto"
      icon: mdi:volume-medium
    input_number.notifier_morning_volume:
      <<: *customize
      friendly_name: "Vol Mattina"
      icon: mdi:volume-medium
    input_number.notifier_afternoon_volume:
      <<: *customize
      friendly_name: "Vol Pomeriggio"
      icon: mdi:volume-high
    input_number.notifier_evening_volume:
      <<: *customize
      friendly_name: "Vol Sera"
      icon: mdi:volume-medium
    input_number.notifier_night_volume:
      <<: *customize
      friendly_name: "Vol Notte"
      icon: mdi:volume-low
    input_number.notifier_late_night_volume:
      <<: *customize
      friendly_name: "Vol Notte Fonda"
      icon: mdi:volume-low
    input_number.notifier_intercom_volume:
      <<: *customize
      friendly_name: "Volume Interfono"
      icon: mdi:volume-source
    input_number.notifier_tts_wait_time:
      <<: *customize
      friendly_name: "TTS tempo di attesa"
      icon: mdi:av-timer
      unit_of_measurement: "sec"
    ## INPUT SELECT
    input_select.notifier_language:
      <<: *customize
      friendly_name: "Lingua"
      icon: mdi:flag-variant
    input_select.notifier_phone_notify:
      <<: *customize
      friendly_name: "Notifica Telefonica"
      icon: mdi:phone-forward
    select.notifier_text_notify:
      <<: *customize
      friendly_name: "Notifica Testo"
      icon: mdi:message-text-fast
    ## INPUT TEXT
    input_text.notifier_called_number:
      <<: *customize
      friendly_name: "N. Tel / @user"
      icon: mdi:phone-classic
    input_text.notifier_last_message:
      <<: *customize
      friendly_name: "Salva Ultimo Messaggio"
      icon: mdi:repeat
    input_text.notifier_intercom_message:
      <<: *customize
      friendly_name: "Messaggio Interfono"
      icon: mdi:bullhorn-outline
    ## SCRIPT
    script.my_notify:
      <<: *customize
      friendly_name: "My Notify"
    ## SENSOR
    sensor.notifier_config:
      <<: *customize
      friendly_name: "Notifier Config"
      icon: mdi:account-cog    
    sensor.notifier_debug_error:
      <<: *customize
      friendly_name: "Notifier Debug Error"
      icon: mdi:account-wrench
    sensor.notifier_day_period:
      <<: *customize
      friendly_name: "Periodo del Giorno"
    sensor.notifier_day_period_volume:
      <<: *customize
      friendly_name: "Volume Notifica"
    sensor.notifier_text_notify:
      <<: *customize
      friendly_name: "Notify Predefinito"
      icon: mdi:send-check

  ############################################################################
  ##                             CUSTOMIZE GLOB
  ############################################################################
  customize_glob:
    automation.notifier_*:
      <<: *customize
      icon: mdi:alpha-a-circle-outline
    input_datetime.notifier_start_*days:
      <<: *customize
      icon: mdi:clock-start
    input_datetime.notifier_end_*days:
      <<: *customize
      icon: mdi:clock-end
    input_number.notifier_*_volume:
      <<: *customize
      unit_of_measurement: "%"
    sensor.notifier_*_volume:
      <<: *customize
      unit_of_measurement: "%"

###############################################################################
## PACKAGE
###############################################################################

###############################################################################
## OTHER COMPONENTS
###############################################################################
media_extractor:

#######################################-#######################################
##                                   INPUT
#######################################-#######################################
group:
  notifier_group_volumes:
    name: "Notifier group volumes"
    entities:
      - input_number.notifier_intercom_volume
      - input_number.notifier_early_morning_volume
      - input_number.notifier_morning_volume
      - input_number.notifier_afternoon_volume
      - input_number.notifier_evening_volume
      - input_number.notifier_night_volume
      - input_number.notifier_late_night_volume
      - input_boolean.notifier_speech_notifications
      - binary_sensor.notifier_dnd
      - sensor.notifier_day_period_volume

  notifier_group_notification:
    name: "Notifier group notification"
    entities:
      - input_boolean.notifier_text_notifications
      - input_boolean.notifier_screen_notifications
      - input_boolean.notifier_speech_notifications
      - input_boolean.notifier_phone_notifications
#######################################-#######################################
##                                   INPUT
#######################################-#######################################
input_boolean:
  notifier_guest_mode:
  notifier_holidays:
  notifier_html_mode:
  notifier_phone_notifications:
  notifier_priority_message:
  notifier_screen_notifications:
  notifier_speech_notifications:
  notifier_text_notifications:
  notifier_tts_clock:
  notifier_wrap_text:
input_button:
  notifier_reset_config:
input_datetime:
  notifier_start_weekdays: &time
    has_date: false
    has_time: true
  notifier_end_weekdays: *time
  notifier_start_holidays: *time
  notifier_end_holidays: *time
  notifier_start_early_morning: *time
  notifier_start_morning: *time
  notifier_start_afternoon: *time
  notifier_start_evening: *time
  notifier_start_night: *time
  notifier_start_late_night: *time
input_number:
  notifier_early_morning_volume: &base_vol
    min: 0
    max: 100
    step: 10
  notifier_morning_volume:  *base_vol
  notifier_afternoon_volume: *base_vol
  notifier_evening_volume: *base_vol
  notifier_night_volume: *base_vol
  notifier_late_night_volume: *base_vol
  notifier_intercom_volume: *base_vol
  notifier_tts_wait_time:
    min: 0
    max: 10
    step: 0.1
input_select:
  notifier_phone_notify:
    options: ["Telegram Call", "Voip Call"]
  notifier_language:
    options:
      - it-IT
      - en-GB
      - en-US
      - fr-FR
      - de-DE
      - es-ES
input_text:
  notifier_last_message:
    max: 255
  notifier_intercom_message:
    max: 255
  notifier_called_number:
    max: 30
    mode: password

# Legacy sensor configuration format (template integration issue with AppDaemon)
sensor:
  - platform: template
    sensors:
      notifier_debug_error:
        friendly_name: "Notifier Debug Error"
        icon_template: "mdi:account-wrench"
        value_template: "OK"

#######################################-#######################################
##                                 TEMPLATE
#######################################-#######################################
template:
  - trigger:
      - platform: event
        event_type: notifier_config
    sensor:
      - name: "notifier config"
        state: "{{ trigger.event.data.personal_assistant | default('unknown') }}"
        attributes:
          personal_assistant: "{{ trigger.event.data.personal_assistant }}"
          person: "{{ trigger.event.data.person }}"
          alexa_media_player: "{{ trigger.event.data.alexa_media_player }}"
          alexa_group_player: "{{ trigger.event.data.alexa_group_player }}"
          google_media_player: "{{ trigger.event.data.google_media_player }}"
          google_group_player: "{{ trigger.event.data.google_group_player }}"
          exclude_media_player: "{{ trigger.event.data.exclude_media_player }}"
          notify_service_list: "{{ trigger.event.data.notify_service_list }}"

          alexa_select: "{{ trigger.event.data.alexa_select }}"
          google_select: "{{ trigger.event.data.google_select }}"
          notify_select: "{{ trigger.event.data.notify_select }}"

  - trigger:
      - platform: state
        entity_id:
          - select.notifier_text_notify
        not_to:
          - "unavailable"
          - "unknown"
          - "none"
    sensor:
      - name: "notifier_text_notify"
        state: >-
          {% set selected = (trigger.to_state.state 
            | regex_replace(find=" *, *", replace=",") | lower).rsplit(",") %} 
          {% set lst = selected %}
          {% set ns = namespace(notify=[]) %}
          {% for entity in lst %}
          {% set ns.notify = ns.notify + ['notify.'+ entity | slugify(separator="_") ] %}
          {% endfor %}
          {{ ns.notify | join(', ') }}
        attributes:
          selected: "{{ trigger.to_state.state | default }}"


  - binary_sensor:
      - name: "notifier_dnd"
        state: >-
          {% set nt = now().time() %} {% set nt = (nt.hour * 60 + nt.minute) * 60 + nt.second %}
          {% set speech = is_state('input_boolean.notifier_speech_notifications', 'on') %}
          {% set priority = is_state('input_boolean.notifier_priority_message', 'on') %}
          {% set no_workday = integration_entities('workday') | select('is_state', 'off') | list %}
          {% set holidays = is_state('input_boolean.notifier_holidays', 'on') %}
          {% set day = iif(holidays or no_workday, 'holidays', 'weekdays') %}
          {% set start = state_attr('input_datetime.notifier_start_%s'%day, 'timestamp') %}
          {% set end = state_attr('input_datetime.notifier_end_%s'%day, 'timestamp') %}
          {% set dnd = iif(start <= end, (start <= nt < end), (nt >= start or nt < end)) %}
          {{ iif(speech and not priority, dnd, (not (speech or priority)), false) }}
        icon: >-
          {{ iif(this.state | default(false), 'mdi:minus-circle-off', 'mdi:minus-circle') }}

      - name: "notifier_people_home"
        device_class: presence
        state: "{{ this.attributes.entity | default([]) | count > 0 }}"
        icon: >-
          {% set people = this.attributes.entity
            | count + iif(is_state('input_boolean.notifier_guest_mode', 'on'), 1, 0) %}
          {% set icon = {
            0 :'mdi:account-off', 
            1 :'mdi:account', 
            2 :'mdi:account-multiple', 
            3 :'mdi:account-multiple-check'} %}
          {{ iif(people in icon, icon[people], 'mdi:account-group') }}
        attributes:
          entity: >-
            {{ expand('group.notifier_location_tracker')| selectattr('state', 'eq', 'home')
              | map(attribute='entity_id') | list }}
          number: >-
            {{ this.attributes.entity | count 
              + iif(is_state('input_boolean.notifier_guest_mode', 'on'), 1, 0) }}
          name: >-
            {{ this.attributes.entity | default([]) | map('state_attr', 'friendly_name') | list 
              + iif(is_state('input_boolean.notifier_guest_mode', 'on'), ['Ospiti'], []) }}

  - button:
      - name: "notifier_last_message"
        press:
          - service: script.my_notify
            data:
              title: "Ultimo messaggio"
              message: "{{ states('input_text.notifier_last_message') }}"
              call_no_annuncio: true
              alexa:
                volume: &intercom_volume >
                  {{ states('input_number.notifier_intercom_volume') | int(0) / 100 }}
              google:
                volume: *intercom_volume

  - select: 
      - name: "notifier_text_notify"
        state: "{{ state_attr('sensor.notifier_text_notify', 'selected') | default('unknown', true) }}"
        optimistic: true
        options: |
          {% set lst = state_attr('sensor.notifier_config', 'notify_service_list') | default(['unknown'], true)  %}
          {% set ns = namespace(notify=[]) %}
          {% for entity in lst %}
          {% set ns.notify = ns.notify + [entity | replace('notify.','') | replace("_"," ") | title] %}
          {% endfor %}
          {{ ns.notify | unique | list }}
        select_option:
          - variables:
              option: "{{ option }}"

  - sensor:
      - name: "notifier_day_period"
        state: >-
          {% set nt = now().time() %} {% set nt = (nt.hour * 60 + nt.minute) * 60 + nt.second %}
          {% set a = state_attr('input_datetime.notifier_start_early_morning', 'timestamp') %}
          {% set b = state_attr('input_datetime.notifier_start_morning', 'timestamp') %}
          {% set c = state_attr('input_datetime.notifier_start_afternoon', 'timestamp') %}
          {% set d = state_attr('input_datetime.notifier_start_evening', 'timestamp') %}
          {% set e = state_attr('input_datetime.notifier_start_night', 'timestamp') %}
          {% set f = state_attr('input_datetime.notifier_start_late_night', 'timestamp') %}
          {{ {a <= nt < b: 'Mattina presto',
              b <= nt < c: 'Mattina',
              c <= nt < d: 'Pomeriggio',
              d <= nt < e: 'Sera',
              e <= nt < f: 'Notte',
              (e > f) and (nt > e or nt < f): 'Notte',
              }.get(True, 'Notte fonda') }}
          {# Alternative if 00:00 in 'Sera' (period segment --> [e])
          {{ {
          a <= nt < b: 'Mattina presto',
          b <= nt < c: 'Mattina',
          c <= nt < d: 'Pomeriggio',
          iif(d <= e, (d <= nt < e), (nt > d or nt < e)): 'Sera',
          iif(e <= f, (e <= nt < f), (nt > e or nt < f)): 'Notte',
          }.get(true, "Notte Fonda") }}
          <------------------------------------------------------ #}
        icon: >-
          {% set state = this.state   %}
          {{ {
          'Mattina presto': 'mdi:weather-sunny-off',
          'Mattina': 'mdi:weather-sunset-up',
          'Pomeriggio': 'mdi:weather-sunny',
          'Sera': 'mdi:weather-sunset',
          'Notte': 'mdi:weather-sunset-down',
          'Notte fonda': 'mdi:weather-night',
          }.get(state, 'mdi:theme-light-dark') }}

      - name: "notifier_day_period_volume"
        state: >-
          {{ {  
          'Mattina presto': states('input_number.notifier_early_morning_volume'),
          'Mattina': states('input_number.notifier_morning_volume'),
          'Pomeriggio': states('input_number.notifier_afternoon_volume'),
          'Sera': states('input_number.notifier_evening_volume'),
          'Notte': states('input_number.notifier_night_volume'),
          'Notte fonda': states('input_number.notifier_late_night_volume'),
          }.get(states('sensor.notifier_day_period'), 'Notte fonda') |int(10) }}
        icon: >-
          {% set volume = this.state | default(0) | int(0) %}
          {{ { 0 < volume <= 30: 'mdi:volume-low',
              30 < volume <= 60: 'mdi:volume-medium',
              volume > 60: 'mdi:volume-high',
              }.get(true, 'mdi:volume-off') }}
        attributes:
          vol: "{{ (this.state | default(10, true) | float(10)) / 100 }}"

      # Use modern configuration (BUG in namespace AppDaemon)
      # - name: "notifier debug error"
      #   state: "OK"
#######################################-#######################################
##                               SHELL COMMAND
#######################################-#######################################
# https://www.callmebot.com/blog/telegram-call-from-home-assistant/
shell_command:
  telegram_call: "/usr/bin/wget {{ url }} -O /dev/null"
  # telegram_call: '/usr/bin/curl {{ url }} -O /dev/null'  # alternative

#######################################-#######################################
##                                  SCRIPT
#######################################-#######################################
script:
  #------------------------------------------------------------------------------------#
  # MAIN SCRIPT - Variables to be passed to the HUB + template file event if included
  #------------------------------------------------------------------------------------#
  my_notify:
    alias: Notifier
    description: "Cross-platform notification sorting center"
    fields:
      title:
        name: title
        description: "Title for your notification."
        example: &ex_title "‚≠ê Star Notifier app on GitHub!."
        default: *ex_title
        selector:
          text:
            multiline: true
      message:
        name: message
        description: "Message body of the notification."
        example: &ex_message "Star Notifier app on GitHub!"
        default: *ex_message
        required: false
        selector:
          text:
            multiline: true
      alexa:
        name: alexa
        description: "Parameter for TTS Alexa. Bool (True/Flase) or Dict (media_player, message, audio)"
        example: &ex_alexa |
          media_player: media_player.studio
          message: Cuc√π! Sono le 10:00, accipicchia!
          audio: "soundbank://soundlibrary/foley/amzn_sfx_clock_ticking_01"
        default: *ex_alexa
        required: false
        selector:
          object:
      google:
        name: google
        description: "Parameter for TTS Google. Bool (True/Flase) or Dict (media_player, message, audio)"
        example: &ex_google |
          message: test more Google.
          media_player: media_player.red,media_player.black2
          volume: 0.5
        default: *ex_google
        required: false
        selector:
          object:
      called_number:
        name: called_number
        description: "called number"
        example: "3331122343"
        default: "3331122343"
        required: false
        selector:
          object:
      caption:
        name: caption
        description: "The title of the image."
        example: "Picture Title"
        default: "Picture Title"
        required: false
        selector:
          object:
      discord:
        name: discord
        description: "All extended functionality under discord"
        example: &ex_discord |
          embed:
            title: 'title'
            description: 'description'
            url: 'https://hassiohelp.eu/'
            color: 199363
            author:
              name: 'Author Hassio Help'
              url: 'https://hassiohelp.eu/'
              icon_url: 'https://hassiohelp.eu/wp-content/uploads/2019/03/hassiohelp-192.png'
            footer:
              text: 'Footer Text'
              icon_url: 'https://www.hassiohelp.eu'
            thumbnail:
              url: 'https://hassiohelp.eu/wp-content/uploads/2019/03/hassiohelp-192.png'
            image:
              url: 'https://hassiohelp.eu/wp-content/uploads/2019/03/hassiohelp-192.png'
        default: *ex_discord
        required: false
        selector:
          object:
      html:
        name: html
        description: "HTML management in Telegram messages."
        example: "false"
        default: false
        required: false
        selector:
          boolean:
      image:
        name: image
        description: "image"
        example: "/config/www/hassiohelp/pkg_natural_events/burze.png"
        default: "https://hassiohelp.eu/wp-content/uploads/2020/11/Notifer-3.0-00-2-2048x1451.jpg"
        required: false
        selector:
          object:
      link:
        name: link
        description: "link"
        example: "https://github.com/jumping2000/notifier"
        default: "https://github.com/caiosweet/Package-Notification-HUB-AppDaemon"
        required: false
        selector:
          object:
      location:
        name: location
        description: "Send notification only if at home (home) or if you are away (not_home)."
        example: "home"
        default: "home"
        required: false
        selector:
          object:
      mobile:
        name: mobile
        description: "All extended functionality under Mobile App."
        example: &ex_mobile |
          # iOS URL
          url: "https://github.com/jumping2000/notifier"
          # Android URL
          clickAction: "https://github.com/jumping2000/notifier"
        default: *ex_mobile
        required: false
        selector:
          object:
      no_show:
        name: no_show
        description: "Disables persistent notification."
        example: "true"
        default: true
        required: false
        selector:
          boolean:
      notify:
        name: notify
        description: |-
          [0, false, off, no] does not send the text notification.
          Notify name or entity_id send notification to a device other than the default one.
          Multiple notification service is allowed"
        example: "telegram, pushover, mobile_app_oneplus_a5010"
        default: "telegram, pushover, mobile_app_oneplus_a5010"
        required: false
        selector:
          object:
      priority:
        name: priority
        description: "by-pass DND (do not disturb) and all switches or booleans."
        example: "false"
        default: false
        required: false
        selector:
          boolean:
      pushover:
        name: pushover
        description: "All extended functionality under pushover"
        example: &ex_pushover |
          sound: bike
          priority: 0
          expire: 300
          retry: 30
        default: *ex_pushover
        required: false
        selector:
          object:
      telegram:
        name: telegram, pushover, discord
        description: "All extended functionality under telegram"
        example: &ex_telegram |
          inline_keyboard:
            üîî Menu:/menu
        default: *ex_telegram
        required: false
        selector:
          object:
      whatsapp:
        name: whatsapp
        description: "whatsapp addon by Giuseppe Castaldo"
        example: &ex_whatsapp |
          clientId: default
          to: 391234567890@s.whatsapp.net # User ID
          body:
            text: ‚≠ê Star Notifier app on GitHub! https://github.com/jumping2000/notifier
        default: *ex_whatsapp
        required: false
        selector:
          object:
    mode: queued
    sequence:
      - event: notifier
        event_data:
          # --------------------------------------------- #
          # VARIABLES (String)
          # --------------------------------------------- #
          ad: >-
            {{ ad | default }}
          alexa: >-
            {{ alexa | default }}
          called_number: >-
            {{ called_number | default }}
          caption: >-
            {{ caption | default }}
          discord: >-
            {{ discord | default }}
          google: >-
            {{ google | default }}
          html: >-
            {{ html | default }}
          image: >-
            {{ image | default }}
          link: >-
            {{ link | default }}
          location: >-
            {{ location | default }}
          mobile: >-
            {{ mobile | default }}
          no_show: >-
            {{ no_show | default }}
          notify: >-
            {{ notify | default }}
          priority: >-
            {{ priority | default }}
          pushover: >-
            {{ pushover | default }}
          target: >-
            {{ target | default }}
          telegram: >-
            {{ telegram | default }}
          title: >-
            {{ title | default }}
          whatsapp: >-
            {{ whatsapp | default }}
          #----------------------------------------------------------------------------#
          # FILE TO BE INCLUDED IF MACROS ARE USED - DO NOT MODIFY THE .yml EXTENSION
          #----------------------------------------------------------------------------#
          message: !include hub_build_message.yml
