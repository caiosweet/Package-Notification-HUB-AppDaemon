### INFO
#   @site           :   https://hassiohelp.eu/
#   @author         :   Caio - https://github.com/caiosweet
#                   :   Gianpi - https://github.com/jumping2000
#   @date           :   Started 01/11/2019 - Updated 27/11/2022
#   @description    :   Package for Appdaemon Notifier Center
#                       https://github.com/jumping2000/notifier
#   @package        :   Notification HUB - Centro Notifiche üîî
#   @last_release   :   https://api.github.com/repos/caiosweet/Package-Notification-HUB-AppDaemon/releases/latest
############################################################################

#######################################-#######################################
##                                 CUSTOMIZE
#######################################-#######################################
homeassistant:
  customize:
    ## NODE ANCHORS
    package.node_anchors:
      customize: &customize
        package: "Centro Notifiche üîî"
        site: "hassiohelp.eu üåê"
        author: "Caio & Gianpi"
        version: "Main 4.0.0"

    ## AUTOMATION
    automation.notifier_auto_volume:
      <<: *customize
      friendly_name: "Notifier Volume Automatico"
    automation.notifier_initialization_startup:
      <<: *customize
      friendly_name: "Notifier Startup"
    automation.notifier_guest_mode:
      <<: *customize
      friendly_name: "Notifier Modo Ospite"
    automation.notifier_repeat_message:
      <<: *customize
      friendly_name: "Notifier Ripete Messaggio"
    automation.notifier_intercom_message:
      <<: *customize
      friendly_name: "Notifier Messaggio Iterfono"
      icon: mdi:bullhorn
    ## BINARY SENSOR
    binary_sensor.notifier_dnd:
      <<: *customize
      friendly_name: "Modo Silenzioso"
    binary_sensor.notifier_people_home:
      <<: *customize
      friendly_name: "Persone in casa"
    ## GROUP
    group.notifier_automations:
      <<: *customize
      friendly_name: "Automazioni Notifier"
      icon: mdi:home-automation
    group.notifier_location_tracker:
      <<: *customize
      friendly_name: "Dispositivi tracciati"
      icon: mdi:target-account
    group.notifier_player_alexa:
      <<: *customize
      friendly_name: "Gruppo Alexa"
      icon: mdi:speaker-multiple
    group.notifier_player_google:
      <<: *customize
      friendly_name: "Gruppo Google"
      icon: mdi:speaker-multiple
    ## INPUT BOOLEAN
    input_boolean.notifier_guest_mode:
      <<: *customize
      friendly_name: "Modo Ospite"
      icon: mdi:account-multiple-plus
    input_boolean.notifier_holidays:
      <<: *customize
      friendly_name: "Modo Vacanza"
      icon: mdi:beach
    input_boolean.notifier_html_mode:
      <<: *customize
      friendly_name: "Modo Markdown/Html"
      icon: mdi:language-html5 #language-markdown
    input_boolean.notifier_last_message:
      <<: *customize
      friendly_name: "Ultimo Messaggio"
      icon: mdi:repeat-once
    input_boolean.notifier_phone_notifications:
      <<: *customize
      friendly_name: "Notifiche VoIP"
      icon: mdi:phone-in-talk
    input_boolean.notifier_priority_message:
      <<: *customize
      friendly_name: "Modo Prioritario"
      icon: mdi:alarm-light
    input_boolean.notifier_screen_notifications:
      <<: *customize
      friendly_name: "Notifiche Persistenti"
      icon: mdi:dock-left #mdi:message-bulleted
    input_boolean.notifier_speech_notifications:
      <<: *customize
      friendly_name: "Notifiche Vocali"
      icon: mdi:account-tie-voice
    input_boolean.notifier_text_notifications:
      <<: *customize
      friendly_name: "Notifiche Testo"
      icon: mdi:cellphone-message
    input_boolean.notifier_tts_clock:
      <<: *customize
      friendly_name: "Orario in TTS App"
      icon: mdi:message-text-clock
    input_boolean.notifier_wrap_text:
      <<: *customize
      friendly_name: "Testo a capo"
      icon: mdi:wrap
    ## INPUT DATETIME
    input_datetime.notifier_start_morning:
      <<: *customize
      friendly_name: "Inizio Mattina"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_afternoon:
      <<: *customize
      friendly_name: "Inizio Pomeriggio"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_evening:
      <<: *customize
      friendly_name: "Inizio Sera"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_night:
      <<: *customize
      friendly_name: "Inizio Notte"
      icon: mdi:timer-play-outline
    input_datetime.notifier_start_weekdays:
      <<: *customize
      friendly_name: "Inizio DND Feriali"
    input_datetime.notifier_end_weekdays:
      <<: *customize
      friendly_name: "Fine DND Feriali"
    input_datetime.notifier_start_holidays:
      <<: *customize
      friendly_name: "Inizio DND Vacanze"
    input_datetime.notifier_end_holidays:
      <<: *customize
      friendly_name: "Fine DND Vacanze"
    ## INPUT NUMBER
    input_number.notifier_morning_volume:
      <<: *customize
      friendly_name: "Vol Mattina"
      icon: mdi:volume-medium
    input_number.notifier_afternoon_volume:
      <<: *customize
      friendly_name: "Vol Pomeriggio"
      icon: mdi:volume-high
    input_number.notifier_evening_volume:
      <<: *customize
      friendly_name: "Vol Sera"
      icon: mdi:volume-medium
    input_number.notifier_night_volume:
      <<: *customize
      friendly_name: "Vol Notte"
      icon: mdi:volume-low
    input_number.notifier_intercom_volume:
      <<: *customize
      friendly_name: "Volume Interfono"
      icon: mdi:volume-source
    input_number.notifier_tts_wait_time:
      <<: *customize
      friendly_name: "TTS tempo di attesa"
      icon: mdi:av-timer
      unit_of_measurement: "sec"
    ## INPUT SELECT
    input_select.notifier_language:
      <<: *customize
      friendly_name: "Lingua"
      icon: mdi:flag-variant
    input_select.notifier_phone_notify:
      <<: *customize
      friendly_name: "Notifica Telefonica"
      icon: mdi:phone-forward
    input_select.notifier_text_notify:
      <<: *customize
      friendly_name: "Notifica Testo"
      icon: mdi:message-cog
    ## INPUT TEXT
    input_text.notifier_called_number:
      <<: *customize
      friendly_name: "N. Tel / @user"
      icon: mdi:phone-classic
    input_text.notifier_last_message:
      <<: *customize
      friendly_name: "Salva Ultimo Messaggio"
      icon: mdi:repeat
    input_text.notifier_intercom_message:
      <<: *customize
      friendly_name: "Messaggio Interfono"
      icon: mdi:bullhorn-outline
    input_text.notifier_personal_assistant:
      <<: *customize
      friendly_name: "Nome Assistente"
    ## SCRIPT
    script.my_notify:
      <<: *customize
      friendly_name: "My Notify"
    ## SENSOR
    sensor.notifier_debug_error:
      <<: *customize
      friendly_name: "Notifier Debug Error"
      icon: mdi:account-tie-outline
    sensor.notifier_day_period:
      <<: *customize
      friendly_name: "Periodo del Giorno"
    sensor.notifier_day_period_volume:
      <<: *customize
      friendly_name: "Volume Notifica"

  ############################################################################
  ##                             CUSTOMIZE GLOB
  ############################################################################
  customize_glob:
    automation.notifier_*:
      <<: *customize
      icon: mdi:alpha-a-circle-outline
    input_datetime.notifier_start_*days:
      <<: *customize
      icon: mdi:clock-start
    input_datetime.notifier_end_*days:
      <<: *customize
      icon: mdi:clock-end
    input_number.notifier_*_volume:
      <<: *customize
      unit_of_measurement: "%"
    sensor.notifier_*_volume:
      <<: *customize
      unit_of_measurement: "%"

###############################################################################
## PACKAGE
###############################################################################

###############################################################################
## OTHER COMPONENTS
###############################################################################
media_extractor:

#######################################-#######################################
##                                   INPUT
#######################################-#######################################
input_boolean:
  notifier_guest_mode:
  notifier_holidays:
  notifier_html_mode:
  notifier_last_message:
  notifier_phone_notifications:
  notifier_priority_message:
  notifier_screen_notifications:
  notifier_speech_notifications:
  notifier_text_notifications:
  notifier_tts_clock:
  notifier_wrap_text:
input_datetime:
  notifier_start_weekdays:
    has_date: false
    has_time: true
  notifier_end_weekdays:
    has_date: false
    has_time: true
  notifier_start_holidays:
    has_date: false
    has_time: true
  notifier_end_holidays:
    has_date: false
    has_time: true
  notifier_start_morning:
    has_date: false
    has_time: true
  notifier_start_afternoon:
    has_date: false
    has_time: true
  notifier_start_evening:
    has_date: false
    has_time: true
  notifier_start_night:
    has_date: false
    has_time: true
input_number:
  notifier_morning_volume:
    min: 0
    max: 100
    step: 10
  notifier_afternoon_volume:
    min: 0
    max: 100
    step: 10
  notifier_evening_volume:
    min: 0
    max: 100
    step: 10
  notifier_night_volume:
    min: 0
    max: 100
    step: 10
  notifier_intercom_volume:
    min: 0
    max: 100
    step: 10
  notifier_tts_wait_time:
    min: 0
    max: 5
    step: 0.1
input_select:
  notifier_text_notify:
    options: !secret text_notify_hub
  notifier_phone_notify:
    options: ["Telegram Call", "Voip Call"]
  notifier_language:
    options:
      - it-IT
      - en-GB
      - en-US
      - fr-FR
      - de-DE
      - es-ES
input_text:
  notifier_last_message:
    max: 255
  notifier_intercom_message:
    max: 255
  notifier_personal_assistant:
    max: 255
  notifier_called_number:
    max: 30
    mode: password

#######################################-#######################################
##                                 TEMPLATE
#######################################-#######################################
template:
  - binary_sensor:
      - name: "notifier_dnd"
        state: >-
          {% set speech = states('input_boolean.notifier_speech_notifications') %}
          {% set priority = states('input_boolean.notifier_priority_message') %}
          {% set t = now().time() %}
          {% set t = (t.hour * 60 + t.minute) * 60 + 60 %}
          {% set day = 'weekdays' if (is_state('binary_sensor.workday_sensor', 'on')
              and is_state('input_boolean.notifier_holidays', 'off')) else 'holidays' %}
          {% set start = state_attr('input_datetime.notifier_start_%s'%day, 'timestamp') %}
          {% set end = state_attr('input_datetime.notifier_end_%s'%day, 'timestamp') %}
          {% if speech == 'on' and priority == 'off' %}
            {{ (start < t < end) if start < end else ((t > start or t < end) and start != end) }}
          {% elif speech == 'off' and priority == 'off'%}
            True
          {% else %}
            False
          {% endif %}
        icon: >-
          {{ iif(this.state | default('off', true), ' mdi:minus-circle-off', 'mdi:minus-circle') }}

      - name: "notifier_people_home"
        device_class: presence
        state: >-
          {{ states.person | selectattr('state', 'eq', 'home') | list | count > 0 }}
        icon: >-
          {% set people = states.person | selectattr('state', 'eq', 'home') | list
            | count + iif(is_state('input_boolean.notifier_guest_mode', 'on'), 1, 0) %}
          {% set icon = {
                    0 :'mdi:account-off', 
                    1 :'mdi:account', 
                    2 :'mdi:account-multiple', 
                    3 :'mdi:account-multiple-check'
                  } %}
          {{ iif(people in icon, icon[people], 'mdi:account-group') }}
        attributes:
          number: >-
            {{ states.person 
              | selectattr('state', 'eq', 'home') | list | count 
              + iif(is_state('input_boolean.notifier_guest_mode', 'on'),1,0) }}
          name: >-
            {{ states.person
              | selectattr('state', 'eq', 'home') | join(', ', attribute = 'name')
              + iif(is_state('input_boolean.notifier_guest_mode', 'on'), ', Ospiti', '') }}
          entity: >-
            {{ states.person
              | selectattr('state', 'eq', 'home') | join(', ', attribute = 'entity_id')
              + iif(is_state('input_boolean.notifier_guest_mode', 'on'), ', Ospiti', '') }}

  - sensor:
      - name: "notifier_day_period"
        state: >-
          {% set morning = state_attr('input_datetime.notifier_start_morning', 'timestamp') %}
          {% set afternoon = state_attr('input_datetime.notifier_start_afternoon', 'timestamp') %}
          {% set evening = state_attr('input_datetime.notifier_start_evening', 'timestamp') %}
          {% set night = state_attr('input_datetime.notifier_start_night', 'timestamp') %}
          {% set nt = now().time() %}
          {% set nt = (nt.hour * 60 + nt.minute) * 60 + nt.second %}
          {% if morning <= nt < afternoon %} Mattino
          {% elif afternoon <= nt < evening %} Pomeriggio
          {% elif evening <= nt < night %} Sera
          {% elif (evening > night) and (nt > evening or nt < night) %} Sera
          {% else %} Notte {% endif %}
        icon: >-
          {{ {  'Mattino': 'mdi:weather-sunset-up',
                'Pomeriggio': 'mdi:weather-sunny',
                'Sera': 'mdi:weather-sunset-down',
                'Notte': 'mdi:weather-night',
                'unknown': 'mdi:theme-light-dark', 
                'unavailable': 'mdi:weather-sunny-off',
            } [this.state | default('unknown', true)] | default }}

      - name: "notifier_day_period_volume"
        state: >-
          {{ {  'Mattino': states('input_number.notifier_morning_volume'),
                'Pomeriggio': states('input_number.notifier_afternoon_volume'),
                'Sera': states('input_number.notifier_evening_volume'),
                'Notte': states('input_number.notifier_night_volume'),
                'unknown': 10, 'unavailable': 10,
            } [states('sensor.notifier_day_period') | default('unknown', true)] | int(10) }}
        icon: >-
          {% set volume = this.state | default(0, true) | int(0) %}
          {% if volume == 0 %} mdi:volume-off
          {% elif 0 < volume <= 30 %} mdi:volume-low
          {% elif 40 <= volume <= 60 %} mdi:volume-medium
          {% else %} mdi:volume-high {% endif %}
        attributes:
          vol: >-
            {{ (this.state | default(10, true) | float(10)) / 100 }}

      - name: "notifier_debug_error"
        state: "OK"

#######################################-#######################################
##                                  SCRIPT
#######################################-#######################################
script:
  #------------------------------------------------------------------------------------#
  # MAIN SCRIPT - Variables to be passed to the HUB + template file event if included
  #------------------------------------------------------------------------------------#
  my_notify:
    alias: Notifier
    description: "Cross-platform notification sorting center"
    fields:
      title:
        name: title
        description: "Title for your notification."
        example: &ex_title "‚≠ê Star Notifier app on GitHub!."
        default: *ex_title
        selector:
          text:
            multiline: true
      message:
        name: message
        description: "Message body of the notification."
        example: &ex_message "Star Notifier app on GitHub!"
        default: *ex_message
        required: false
        selector:
          text:
            multiline: true
      alexa:
        name: alexa
        description: "Parameter for TTS Alexa. Bool (True/Flase) or Dict (media_player, message, audio)"
        example: &ex_alexa |
          media_player: media_player.studio
          message: Cuc√π! Sono le 10:00, accipicchia!
          audio: "soundbank://soundlibrary/foley/amzn_sfx_clock_ticking_01"
        default: *ex_alexa
        required: false
        selector:
          object:
      google:
        name: google
        description: "Parameter for TTS Google. Bool (True/Flase) or Dict (media_player, message, audio)"
        example: &ex_google |
          message: test more Google.
          media_player: media_player.red,media_player.black2
          volume: 0.5
        default: *ex_google
        required: false
        selector:
          object:
      called_number:
        name: called_number
        description: "called number"
        example: "3331122343"
        default: "3331122343"
        required: false
        selector:
          object:
      caption:
        name: caption
        description: "The title of the image."
        example: "Picture Title"
        default: "Picture Title"
        required: false
        selector:
          object:
      discord:
        name: discord
        description: "All extended functionality under discord"
        example: &ex_discord |
          embed:
            title: 'title'
            description: 'description'
            url: 'https://hassiohelp.eu/'
            color: 199363
            author:
              name: 'Author Hassio Help'
              url: 'https://hassiohelp.eu/'
              icon_url: 'https://hassiohelp.eu/wp-content/uploads/2019/03/hassiohelp-192.png'
            footer:
              text: 'Footer Text'
              icon_url: 'https://www.hassiohelp.eu'
            thumbnail:
              url: 'https://hassiohelp.eu/wp-content/uploads/2019/03/hassiohelp-192.png'
            image:
              url: 'https://hassiohelp.eu/wp-content/uploads/2019/03/hassiohelp-192.png'
        default: *ex_discord
        required: false
        selector:
          object:
      html:
        name: html
        description: "HTML management in Telegram messages."
        example: "false"
        default: false
        required: false
        selector:
          boolean:
      image:
        name: image
        description: "image"
        example: "/config/www/hassiohelp/pkg_natural_events/burze.png"
        default: "https://hassiohelp.eu/wp-content/uploads/2020/11/Notifer-3.0-00-2-2048x1451.jpg"
        required: false
        selector:
          object:
      link:
        name: link
        description: "link"
        example: "https://github.com/jumping2000/notifier"
        default: "https://github.com/caiosweet/Package-Notification-HUB-AppDaemon"
        required: false
        selector:
          object:
      location:
        name: location
        description: "Send notification only if at home (home) or if you are away (not_home)."
        example: "home"
        default: "home"
        required: false
        selector:
          object:
      mobile:
        name: mobile
        description: "All extended functionality under Mobile App."
        example: &ex_mobile |
          # iOS URL
          url: "https://github.com/jumping2000/notifier"
          # Android URL
          clickAction: "https://github.com/jumping2000/notifier"
        default: *ex_mobile
        required: false
        selector:
          object:
      no_show:
        name: no_show
        description: "Disables persistent notification."
        example: "true"
        default: true
        required: false
        selector:
          boolean:
      notify:
        name: notify
        description: |-
          [0, false, off, no] does not send the text notification.
          Notify name or entity_id send notification to a device other than the default one.
          Multiple notification service is allowed"
        example: "telegram, pushover, mobile_app_oneplus_a5010"
        default: "telegram, pushover, mobile_app_oneplus_a5010"
        required: false
        selector:
          object:
      priority:
        name: priority
        description: "by-pass DND (do not disturb) and all switches or booleans."
        example: "false"
        default: false
        required: false
        selector:
          boolean:
      pushover:
        name: pushover
        description: "All extended functionality under pushover"
        example: &ex_pushover |
          sound: bike
          priority: 0
          expire: 300
          retry: 30
        default: *ex_pushover
        required: false
        selector:
          object:
      telegram:
        name: telegram, pushover, discord
        description: "All extended functionality under telegram"
        example: &ex_telegram |
          inline_keyboard:
            üîî Menu:/menu
        default: *ex_telegram
        required: false
        selector:
          object:
      whatsapp:
        name: whatsapp
        description: "whatsapp addon by Giuseppe Castaldo"
        example: &ex_whatsapp |
          clientId: default
          to: 391234567890@s.whatsapp.net # User ID
          body:
            text: ‚≠ê Star Notifier app on GitHub! https://github.com/jumping2000/notifier
        default: *ex_whatsapp
        required: false
        selector:
          object:
    mode: queued
    sequence:
      - event: notifier
        event_data:
          # --------------------------------------------- #
          # VARIABLES (String)
          # --------------------------------------------- #
          alexa: >-
            {{ alexa | default }}
          called_number: >-
            {{ called_number | default }}
          caption: >-
            {{ caption | default }}
          discord: >-
            {{ discord | default }}
          google: >-
            {{ google | default }}
          html: >-
            {{ html | default }}
          image: >-
            {{ image | default }}
          link: >-
            {{ link | default }}
          location: >-
            {{ location | default }}
          mobile: >-
            {{ mobile | default }}
          no_show: >-
            {{ no_show | default }}
          notify: >-
            {{ notify | default }}
          priority: >-
            {{ priority | default }}
          pushover: >-
            {{ pushover | default }}
          target: >-
            {{ target | default }}
          telegram: >-
            {{ telegram | default }}
          title: >-
            {{ title | default }}
          whatsapp: >-
            {{ whatsapp | default }}
          #----------------------------------------------------------------------------#
          # FILE TO BE INCLUDED IF MACROS ARE USED - DO NOT MODIFY THE .yml EXTENSION
          #----------------------------------------------------------------------------#
          message: !include hub_build_message.yml

#######################################-#######################################
##                               SHELL COMMAND
#######################################-#######################################
# https://www.callmebot.com/blog/telegram-call-from-home-assistant/
shell_command:
  telegram_call: "/usr/bin/wget {{ url }} -O /dev/null"
  # telegram_call: '/usr/bin/curl {{ url }} -O /dev/null'  # alternative

#######################################-#######################################
##                                 AUTOMATION
#######################################-#######################################
automation:
  #------------------------------------------------------------------------------------#
  # INITIALIZE
  #------------------------------------------------------------------------------------#
  - alias: notifier_initialization_startup
    initial_state: true
    trigger:
      - platform: homeassistant
        event: start
      - platform: event
        event_type: automation_reloaded
      - platform: time_pattern
        hours: "/1"
    action:
      - variables:
          alexa_media: >
            {{ integration_entities('alexa_media') | select('match', 'media_player') | list }}
          google_cast: >
            {{ integration_entities('cast') }}
          google_inc: >
            {% set mp = namespace(player=[]) %}
            {% for state in states.media_player
                if is_device_attr(state.entity_id, 'manufacturer', 'Google Inc.') %}
                {% set mp.player = mp.player + [state.entity_id]  %}
            {% endfor %}

      - alias: Automatic creation of the notifier_location_tracker Group from Person Domain
        service: group.set
        data:
          object_id: notifier_location_tracker
          entities: >-
            {{ states.person | join(',','entity_id') }}

      - alias: Automatic creation of the notifier_player_alexa Group, if Alexa exists
        choose:
          - conditions:
              - "{{ alexa_media is not none }}"
            sequence:
              - service: group.set
                data:
                  object_id: notifier_player_alexa
                  entities: "{{ alexa_media }}"

      - alias: Automatic creation of the notifier_player_google Group, if Google exists
        choose:
          - conditions:
              - "{{ (google_cast is not none) or (google_inc is not none) }}"
            sequence:
              - service: group.set
                data:
                  object_id: notifier_player_google
                  entities: "{{ google_cast if google_cast else google_inc }}"

      - alias: Set input_text.notifier_personal_assistant blank if unknown
        choose:
          - conditions: "{{ states('input_text.notifier_personal_assistant') == 'unknown' }}"
            sequence:
              - service: input_text.set_value
                data:
                  entity_id: input_text.notifier_personal_assistant
                  value: ""

      - alias: Automatic creation of an notifier_automations Group
        service: group.set
        data:
          object_id: "notifier_automations"
          entities: >-
            {# nuovo anche per backword compatible .endswith('hub') #}
            {{states.automation
              | select('match','.*[_\s]hub|.*notifier[_\s]', ignorecase=True)
              | map(attribute='entity_id') | list }}

      - alias: Execute notifier_auto_volume Automation
        service: automation.trigger
        entity_id: automation.notifier_auto_volume
        # skip_condition: true

  #------------------------------------------------------------------------------------#
  # Auto Volume - Media player volume adjustment, based on period_of_day_volume sensor
  #------------------------------------------------------------------------------------#
  - alias: notifier_auto_volume
    mode: queued
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.notifier_day_period_volume
        not_to:
          - "unknown"
          - "unavailable"
    action:
      - variables:
          list_alexa: >-
            {{ expand('group.notifier_player_alexa') | map(attribute='entity_id') | list }}
          list_google: >-
            {{ expand('group.notifier_player_google') | map(attribute='entity_id') | list }}
          volume: "{{ states('sensor.notifier_day_period_volume') | float(10) }}"
          period: "{{ states('sensor.notifier_day_period') }}"
      - parallel:
          - choose:
              - conditions: "{{ list_alexa | length > 0 }}"
                sequence:
                  - service: script.my_notify
                    data:
                      notify: False
                      message: "Set Auto Volumes silent. {{ period }} at {{ volume | int(0) }}%"
                      alexa:
                        priority: True
                        auto_volumes: True
                        media_player: "{{ list_alexa }}"
          - choose:
              - conditions: "{{ list_google | length > 0 }}"
                sequence:
                  - service: media_player.volume_set
                    data:
                      entity_id: "{{ list_google }}"
                      volume_level: "{{ (volume | round(2)) / 100 }}"
          - service: input_number.set_value
            data:
              entity_id:
                - input_number.notifier_intercom_volume
              value: "{{ volume }}"

  #------------------------------------------------------------------------------------#
  # LAST MESSAGE - Repeat the last text sent (Excluding tts messages)
  #------------------------------------------------------------------------------------#
  - alias: notifier_repeat_message
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: input_boolean.notifier_last_message
        to: "on"
    action:
      - service: script.my_notify
        data:
          title: "Ultimo messaggio"
          message: "{{ states('input_text.notifier_last_message') }}"
          <<: &common
            call_no_annuncio: true
            alexa:
              volume: &intercom_volume >
                {{ states('input_number.notifier_intercom_volume') | int(0) / 100 }}
            google:
              volume: *intercom_volume
      - service: input_boolean.turn_off
        entity_id:
          - input_boolean.notifier_last_message

  #------------------------------------------------------------------------------------#
  # INTERCOM - To send messages from the GUI (graphical user interface)
  #------------------------------------------------------------------------------------#
  - alias: notifier_intercom_message
    initial_state: true
    mode: queued
    trigger:
      - platform: state
        entity_id: input_text.notifier_intercom_message
    condition: "{{ states('input_text.notifier_intercom_message') | trim != '' }}"
    action:
      - service: script.my_notify
        data:
          title: "Interfono"
          message: "{{ states('input_text.notifier_intercom_message')~' ' }}"
          <<: *common
      - service: input_text.set_value
        data:
          entity_id: input_text.notifier_intercom_message
          value: ""

  #------------------------------------------------------------------------------------#
  # GUEST - On and Off guest mode - The TTS works even if you are away from home.
  #         Useful even if you want to exclude automations if there are guests in the house
  #------------------------------------------------------------------------------------#
  - alias: notifier_guest_mode
    initial_state: true
    mode: queued
    trigger:
      platform: state
      entity_id: input_boolean.notifier_guest_mode
    action:
      - service: script.my_notify
        data:
          title: "Modalit√† Ospite - {{ trigger.to_state.state | upper }}"
          call_no_annuncio: true
          call_modo_ospite: true
          alexa: true
          google: true
