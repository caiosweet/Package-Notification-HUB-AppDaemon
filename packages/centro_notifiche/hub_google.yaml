homeassistant:
  ######################################-#######################################
  ##                                CUSTOMIZE
  ######################################-#######################################
  customize:
    ## NODE ANCHORS
    package.cn:
      customize: &customize
        package: "Centro Notifiche 🔔"
        site: "hassiohelp.eu 🌐"
        author: "Caio & Gianpi"
    ## GROUP
    group.notifier_player_google:
      <<: *customize
      friendly_name: "Gruppo Google"
      icon: mdi:speaker-multiple
    ## INPUT
    input_boolean.notifier_google_switch:
      <<: *customize
      friendly_name: "Google Off/On"
      icon: mdi:dots-horizontal-circle-outline
    input_select.notifier_tts_notify:
      <<: *customize
      friendly_name: "Servizio TTS"
      icon: mdi:form-select
    ## SELECT
    select.notifier_player_google:
      <<: *customize
      friendly_name: "Sorgente Google"
      icon: mdi:speaker-wireless
    ## SENSOR
    sensor.notifier_player_google:
      <<: *customize
      friendly_name: "Player Google Predefinito"

#######################################-#######################################
##                                   INPUT
#######################################-#######################################
input_boolean:
  notifier_google_switch:
input_select:
  notifier_tts_notify:
    options: ["Google Say", "Google Cloud", "Google Assistant", "Reverso"]

#######################################-#######################################
##                                 TEMPLATE
#######################################-#######################################
template:
  - select:
      - name: "notifier_player_google"
        state: "{{ state_attr('sensor.notifier_player_google', 'selected') | default('unknown', true) }}"
        optimistic: true
        options: |
          {{ (state_attr('sensor.notifier_config', 'google_media_player')
            | map('state_attr', 'friendly_name') | reject('none') | list)
          + (state_attr('sensor.notifier_config', 'google_group_player')
            | map('state_attr', 'friendly_name') | reject('none') | list)
          }}
        select_option: 
          - variables:
              option: "{{ state_attr('sensor.notifier_player_google', 'selected') }}"

  - trigger:
      - platform: state
        entity_id:
          - select.notifier_player_google
        not_to:
          - "unavailable"
          - "unknown"
          - "none"
    sensor:
      - name: "notifier_player_google"
        state: >-
          {% set domains = (states.group | list) + (states.media_player | list) %}
          {% set player = state_attr('sensor.notifier_config', 'google_media_player') %}
          {% set selected = trigger.to_state.state | lower %}
          {% for x in domains if x.name | lower == selected %}
            {% if x.domain in ['group', 'media_player'] and x.attributes.entity_id is defined 
                and player and x.attributes.entity_id[0] in player | list %}
               {{ x.attributes.entity_id | join(', ') }}
            {% elif x.domain == 'media_player' %}
              {{ x.entity_id }}
            {% else %}
              {{ (player | join(', ')) if player else 'all' }}
            {% endif %}
          {% endfor %}
        icon: >-
          {% set status = trigger.to_state.state
              in integration_entities('group') | map('state_attr', 'friendly_name') %}
          {{ iif(status, 'mdi:speaker-multiple', 'mdi:speaker') }}
        attributes:
          selected: "{{ trigger.to_state.state | default }}"
          entities: >-
            {% set status = trigger.to_state.state
                in integration_entities('group') | map('state_attr', 'friendly_name') %}
            {% set group = state_attr('sensor.notifier_config', 'google_group_player')
                | select('is_state_attr', 'friendly_name', states('select.notifier_player_google'))
                | list | expand | map(attribute='entity_id') | list %}
            {% set single = expand(state_attr('sensor.notifier_config', 'google_media_player'))
              | selectattr('name', '==', states('select.notifier_player_google'))
              | map(attribute='entity_id') | list %}
            {{ iif(status, group, single) }}
