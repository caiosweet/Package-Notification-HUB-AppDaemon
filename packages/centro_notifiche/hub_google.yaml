homeassistant:
  ######################################-#######################################
  ##                                CUSTOMIZE
  ######################################-#######################################
  customize:
    ## NODE ANCHORS
    package.node_anchors:
      customize: &customize
        package: "Centro Notifiche 🔔"
        site: "hassiohelp.eu 🌐"
        author: "Caio & Gianpi"
        version: "Google 4.0.0"

    ## INPUT
    input_boolean.notifier_google_switch:
      <<: *customize
      friendly_name: "Google Off/On"
      icon: mdi:dots-horizontal-circle-outline
    input_select.notifier_tts_notify:
      <<: *customize
      friendly_name: "Servizio TTS"
      icon: mdi:form-select
    ## SELECT
    select.notifier_player_google:
      <<: *customize
      friendly_name: "Sorgente Google"
      icon: mdi:speaker-wireless
    ## SENSOR
    sensor.notifier_player_google:
      <<: *customize
      friendly_name: "Player Google Predefinito"

#######################################-#######################################
##                                   INPUT
#######################################-#######################################
input_boolean:
  notifier_google_switch:
input_select:
  notifier_tts_notify:
    options: ["Google Say", "Google Cloud", "Google Assistant", "Reverso"]

#######################################-#######################################
##                                 TEMPLATE
#######################################-#######################################
template:
  - select:
      - name: "notifier_player_google"
        state: "{{ state_attr('sensor.notifier_player_google', 'selected') | default('none', true) }}"
        optimistic: true
        options: |
          {% set mp = state_attr('group.notifier_player_google', 'entity_id')
            | default(['\0'], true) | join('|') %}
          {{ states | select('search', mp, ignorecase=True)
            | selectattr('entity_id', 'match','media_player|group')
            | map(attribute='name') | list | unique | sort }}
        select_option:
          - event: notifier_global_variables
            event_data: 
              google_selected: "{{ option }}"
              app: google

  - trigger:
      - platform: event
        event_type: notifier_global_variables
        event_data:
          app: google
    sensor:
      - name: "notifier_player_google"
        state: >-
          {% set domains = (states.group | list) + (states.media_player | list) %}
          {% set player = state_attr('group.notifier_player_google','entity_id') %}          
          {% set selected = trigger.event.data.google_selected | lower %}
          {% for x in domains if x.name | lower == selected %}
            {% if x.domain == 'group' and player 
                and x.attributes.entity_id[0] in player | list %}
              {{ x.attributes.entity_id | join(', ') }}
            {% elif x.domain == 'media_player' %}
              {{ x.entity_id }}
            {% else %}
              {{ (player | join(', ')) if player else 'all' }}
            {% endif %}
          {% endfor %}
        icon: >-
          {{ iif(',' in this.state | default('', true), 
              'mdi:speaker-multiple', 'mdi:speaker') }}
        attributes:
          selected: "{{ trigger.event.data.google_selected | default }}"
