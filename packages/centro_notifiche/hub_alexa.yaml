#######################################-#######################################
##                                 CUSTOMIZE                                   
#######################################-#######################################
homeassistant:
  customize:
  ## NODE ANCHORS
    package.node_anchors:
      customize: &customize
        package: Centro Notifiche
        version: Alexa 2.3
        author: Caio & Gianpi
        site: www.hassiohelp.eu

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

  ## INPUT 
    input_boolean.alexa_switch:
      <<: *customize
      friendly_name: Alexa
      icon: mdi:amazon-alexa
    input_select.notification_media_player_alexa:
      <<: *customize
      friendly_name: Sorgente Alexa
      icon: mdi:speaker-wireless
    input_select.default_alexa_method:
      <<: *customize
      friendly_name: Metodo Predefinito Alexa
      icon: mdi:speaker-multiple
    input_select.default_alexa_type:
      <<: *customize
      friendly_name: Tipo Predefinito Alexa
      icon: mdi:bullhorn-outline
  ## SENSOR
    sensor.last_alexa:
      <<: *customize
      friendly_name: Last Alexa
      icon: mdi:play-network
    sensor.media_player_alexa:
      <<: *customize
      friendly_name: Player Alexa Attivo

#######################################-#######################################
##                                   INPUT
#######################################-#######################################
input_boolean:
  alexa_switch:
input_select:
  notification_media_player_alexa:
    options: !secret notification_media_player_alexa_hub
  default_alexa_method:
    options:
      - Speak
      - All
  default_alexa_type:
    options:
      - TTS
      - Announce

#######################################-#######################################
##                                  SENSOR
#######################################-#######################################
sensor:
  - platform: template
    sensors:
      media_player_alexa:
        entity_id: input_select.notification_media_player_alexa, sensor.last_alexa
        value_template: >
          {%set domains=['media_player','group','sensor']-%}
          {%for x in states if x.domain in domains and x.name|lower==states('input_select.notification_media_player_alexa')|lower-%}
          {%if x.domain=='sensor'%}{{x.state}}{%else%}{{-x.entity_id-}}{%endif%}{%endfor%}
        icon_template: >-
          {%set domains=['media_player','group','sensor']-%}
          {%for x in states if x.domain in domains and x.name|lower==states('input_select.notification_media_player_alexa')|lower-%}
          {%if x.domain=='group'%}mdi:speaker-multiple{%else%}mdi:speaker{%endif%}{%endfor%}

#######################################-#######################################
##                                 AUTOMATION
#######################################-#######################################
automation:
  #----------------------------------------------------------------------------------------------------#
  # Volume Automatico - Regolazione e livellamento di tutti i volumi in base al sensor.period_of_day_volume
  #----------------------------------------------------------------------------------------------------#
  - id: alexa_volume_automatico_hub
    alias: "Alexa Volume Automatico"
    initial_state: false
    trigger:
      - platform: state
        entity_id: sensor.period_of_day_volume
    action:
      - service: media_player.volume_set
        data_template:
          entity_id: >
            group.media_player_alexa
          volume_level: >
            {{ states('sensor.period_of_day_volume') | float | round(2) }}
      - service: input_number.set_value
        data_template:
          entity_id: input_number.intercom_message_volume
          value: >
            {{ states('sensor.period_of_day_volume') | float * 100 }}
      - service: input_number.set_value
        data_template:
          entity_id: input_number.default_restore_volume
          value: >
            {{ states('sensor.period_of_day_volume') | float | round(2) }}