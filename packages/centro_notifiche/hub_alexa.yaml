homeassistant:
  # https://github.com/vigonotion/hass-simpleicons
  ######################################-#######################################
  ##                                CUSTOMIZE
  ######################################-#######################################
  customize:
    ## NODE ANCHORS
    package.node_anchors:
      customize: &customize
        package: "Centro Notifiche üîî"
        site: "hassiohelp.eu üåê"
        author: "Caio & Gianpi"
        version: "Alexa 4.0.0"

    ## SENSOR
    binary_sensor.notifier_alexa_speak:
      <<: *customize
      friendly_name: "Alexa parla"
    ## INPUT
    input_boolean.notifier_alexa_switch:
      <<: *customize
      friendly_name: "Alexa Off/On"
      icon: si:amazonalexa
      # icon: mdi:alpha-a-circle
    input_boolean.notifier_alexa_smart_volume:
      <<: *customize
      friendly_name: "Imposta volume smart"
      icon: mdi:volume-equal
    input_boolean.notifier_alexa_ssml:
      <<: *customize
      friendly_name: "SSML Off/On"
      icon: mdi:waveform
    input_number.notifier_alexa_prosody_rate:
      <<: *customize
      friendly_name: "Rate"
      icon: mdi:alpha-r
    input_number.notifier_alexa_prosody_pitch:
      <<: *customize
      friendly_name: "Pitch"
      icon: mdi:alpha-p
    input_number.notifier_alexa_prosody_volume:
      <<: *customize
      friendly_name: "Volume"
      icon: mdi:alpha-v
      unit_of_measurement: "dB"
    input_select.notifier_alexa_voice:
      <<: *customize
      friendly_name: "Amazon Polly voice"
      icon: mdi:account-tie-voice-outline
    input_select.notifier_alexa_language:
      <<: *customize
      friendly_name: Amazon Polly language
      icon: mdi:flag-variant
    input_select.notifier_alexa_method:
      <<: *customize
      friendly_name: "Metodo Predefinito Alexa"
      icon: mdi:monitor-speaker
    input_select.notifier_alexa_type:
      <<: *customize
      friendly_name: "Tipo Predefinito Alexa"
      icon: mdi:bugle
    ## SCRIPT
    script.notifier_ssml_reset:
      <<: *customize
      friendly_name: "Ripristina SSML"
      icon: mdi:restore
    ## SELECT
    select.notifier_player_alexa:
      <<: *customize
      friendly_name: "Sorgente Alexa"
      icon: mdi:speaker-wireless
    ## SENSOR
    sensor.last_alexa:
      <<: *customize
      friendly_name: "Last Alexa"
      icon: mdi:play-network
    sensor.notifier_player_alexa:
      <<: *customize
      friendly_name: "Player Alexa Predefinito"

#######################################-#######################################
##                                   INPUT
#######################################-#######################################
input_boolean:
  notifier_alexa_switch:
  notifier_alexa_ssml:
  notifier_alexa_smart_volume:
input_number:
  notifier_alexa_prosody_rate:
    min: 20
    max: 200
    step: 0.1
  notifier_alexa_prosody_pitch:
    min: -33.3
    max: 50
    step: 0.1
  notifier_alexa_prosody_volume:
    min: -50
    max: 4.08
    step: 0.01
input_select:
  notifier_alexa_method:
    options:
      - Speak
      - All
  notifier_alexa_type:
    options:
      - TTS
      - Announce
      - Push
      - Dropin
  notifier_alexa_voice:
    options:
      [
        "Alexa",
        "Carla",
        "Giorgio",
        "Bianca",
        "Ivy",
        "Joanna",
        "Joey",
        "Justin",
        "Kendra",
        "Kimberly",
        "Matthew",
        "Salli",
        "Nicole",
        "Russell",
        "Amy",
        "Brian",
        "Emma",
        "Raveena",
        "Chantal",
        "Celine",
        "Lea",
        "Mathieu",
        "Hans",
        "Marlene",
        "Vicki",
        "Aditi",
        "Mizuki",
        "Takumi",
        "Vitoria",
        "Camila",
        "Ricardo",
        "Penelope",
        "Lupe",
        "Miguel",
        "Conchita",
        "Enrique",
        "Lucia",
        "Mia",
      ]
  notifier_alexa_language:
    options:
      [
        "Master",
        "it-IT",
        "en-AU",
        "en-CA",
        "en-GB",
        "en-IN",
        "en-US",
        "fr-CA",
        "fr-FR",
        "de-DE",
        "hi-IN",
        "ja-JP",
        "pt-BR",
        "es-ES",
        "es-MX",
        "es-US",
      ]

#######################################-#######################################
##                                 TEMPLATE
#######################################-#######################################
template:
  - select:
      - name: "notifier_player_alexa"
        state: "{{ state_attr('sensor.notifier_player_alexa', 'selected') | default('none', true) }}"
        optimistic: true
        options: |
          {% set mp = state_attr('group.notifier_player_alexa', 'entity_id')
            | default(['\0'], true) | join('|') %}
          {{ states | select('search', mp, ignorecase=True)
            | rejectattr('entity_id', 'search','sensor.notifier_.*')
            | map(attribute='name') | list | unique | sort }}
        select_option:
          - event: notifier_global_variables
            event_data: 
              alexa_selected: "{{ option }}"
              app: alexa

  - trigger:
      - platform: event
        event_type: notifier_global_variables
        event_data:
          app: alexa
    sensor:
      - name: "notifier_player_alexa"
        state: >-
          {% set domains = (states.group | list) + (states.media_player | list) + (states.sensor | list) %}
          {% set player = state_attr('group.notifier_player_alexa','entity_id') %}
          {% set selected = trigger.event.data.alexa_selected | lower %}
          {% for x in domains if x.name | lower == selected %}
            {% if x.domain == 'sensor' and player and x.state in player | list %}
              {{ x.state }}
            {% elif x.domain == 'group'
                  and player and x.attributes.entity_id[0] in player | list %}
              {{ x.attributes.entity_id | join(', ') }}
            {% else %}
              {{ x.entity_id }}
            {% endif %}
          {% endfor %}
        icon: >-
          {% set domains = (states.group | list) + (states.media_player | list) + (states.sensor | list) %}
          {% set selected = trigger.event.data.alexa_selected | lower %}
          {% for x in domains if x.name | lower == selected %}
            {% if x.domain == 'group' %}
              mdi:speaker-multiple
            {% elif x.domain == 'sensor' %}
              mdi:cast-audio
            {% else %}
              mdi:speaker
            {% endif %}
          {% endfor %}
        attributes:
          selected: "{{ trigger.event.data.alexa_selected | default }}"

  - binary_sensor:
      - name: "notifier_alexa_speak"
        state: "off"
#######################################-#######################################
##                                  SCRIPT
#######################################-#######################################
script:
  notifier_ssml_reset:
    sequence:
      - service: input_number.set_value
        data:
          entity_id: 
            - input_number.notifier_alexa_prosody_pitch
            - input_number.notifier_alexa_prosody_volume
          value: 0
      - service: input_number.set_value
        data:
          entity_id: input_number.notifier_alexa_prosody_rate
          value: 100
      - service: input_select.select_option
        data:
          entity_id: input_select.notifier_alexa_voice
          option: Alexa
      - service: input_select.select_option
        data:
          entity_id: input_select.notifier_alexa_language
          option: Master
