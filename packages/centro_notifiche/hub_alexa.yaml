homeassistant:
  # https://github.com/vigonotion/hass-simpleicons
  ######################################-#######################################
  ##                                CUSTOMIZE
  ######################################-#######################################
  customize:
    ## NODE ANCHORS
    package.cn:
      customize: &customize
        package: "Centro Notifiche üîî"
        site: "hassiohelp.eu üåê"
        author: "Caio & Gianpi"

    ## BINARY SENSOR
    binary_sensor.notifier_alexa_speak:
      <<: *customize
      friendly_name: "Alexa parla"
      icon: mdi:speaker-message
    ## BUTTON
    button.notifier_ssml_reset:
      <<: *customize
      friendly_name: "Ripristina SSML"
      # icon: mdi:restore
    ## GROUP
    group.notifier_player_alexa:
      <<: *customize
      friendly_name: "Gruppo Alexa"
      icon: mdi:speaker-multiple
    ## INPUT
    input_boolean.notifier_alexa_switch:
      <<: *customize
      friendly_name: "Alexa Off/On"
      icon: si:amazonalexa
      # icon: mdi:alpha-a-circle
    input_boolean.notifier_alexa_smart_volume:
      <<: *customize
      friendly_name: "Imposta volume smart"
      icon: mdi:volume-equal
    input_boolean.notifier_alexa_ssml:
      <<: *customize
      friendly_name: "SSML Off/On"
      icon: mdi:waveform
    input_number.notifier_alexa_prosody_rate:
      <<: *customize
      friendly_name: "Rate"
      icon: mdi:alpha-r
    input_number.notifier_alexa_prosody_pitch:
      <<: *customize
      friendly_name: "Pitch"
      icon: mdi:alpha-p
    input_number.notifier_alexa_prosody_volume:
      <<: *customize
      friendly_name: "Volume"
      icon: mdi:alpha-v
      unit_of_measurement: "dB"
    input_select.notifier_alexa_voice:
      <<: *customize
      friendly_name: "Amazon Polly voice"
      icon: mdi:account-tie-voice-outline
    input_select.notifier_alexa_language:
      <<: *customize
      friendly_name: Amazon Polly language
      icon: mdi:flag-variant
    input_select.notifier_alexa_method:
      <<: *customize
      friendly_name: "Metodo Predefinito Alexa"
      icon: mdi:monitor-speaker
    input_select.notifier_alexa_type:
      <<: *customize
      friendly_name: "Tipo Predefinito Alexa"
      icon: mdi:bugle
    ## SELECT
    select.notifier_player_alexa:
      <<: *customize
      friendly_name: "Sorgente Alexa"
      icon: mdi:speaker-wireless
    ## SENSOR
    sensor.last_alexa:
      <<: *customize
      friendly_name: "Last Alexa"
      icon: mdi:play-network
    sensor.notifier_player_alexa:
      <<: *customize
      friendly_name: "Player Alexa Predefinito"

#######################################-#######################################
##                                   INPUT
#######################################-#######################################
input_boolean:
  notifier_alexa_switch:
  notifier_alexa_ssml:
  notifier_alexa_smart_volume:
input_number:
  notifier_alexa_prosody_rate:
    min: 20
    max: 200
    step: 0.1
  notifier_alexa_prosody_pitch:
    min: -33.3
    max: 50
    step: 0.1
  notifier_alexa_prosody_volume:
    min: -50
    max: 4.08
    step: 0.01
input_select:
  notifier_alexa_method:
    options:
      - Speak
      - All
  notifier_alexa_type:
    options:
      - TTS
      - Announce
      - Push
      - Dropin
  notifier_alexa_voice:
    options:
      [
        "Alexa",
        "Carla",
        "Giorgio",
        "Bianca",
        "Ivy",
        "Joanna",
        "Joey",
        "Justin",
        "Kendra",
        "Kimberly",
        "Matthew",
        "Salli",
        "Nicole",
        "Russell",
        "Amy",
        "Brian",
        "Emma",
        "Raveena",
        "Chantal",
        "Celine",
        "Lea",
        "Mathieu",
        "Hans",
        "Marlene",
        "Vicki",
        "Aditi",
        "Mizuki",
        "Takumi",
        "Vitoria",
        "Camila",
        "Ricardo",
        "Penelope",
        "Lupe",
        "Miguel",
        "Conchita",
        "Enrique",
        "Lucia",
        "Mia",
      ]
  notifier_alexa_language:
    options:
      [
        "Master",
        "it-IT",
        "en-AU",
        "en-CA",
        "en-GB",
        "en-IN",
        "en-US",
        "fr-CA",
        "fr-FR",
        "de-DE",
        "hi-IN",
        "ja-JP",
        "pt-BR",
        "es-ES",
        "es-MX",
        "es-US",
      ]
# Legacy binary sensor configuration format (template integration issue with AppDaemon)
binary_sensor:
  - platform: template
    sensors:
      notifier_alexa_speak:
        friendly_name: "Alexa Speak"
        icon_template: "mdi:speaker-message"
        value_template: "off"
#######################################-#######################################
##                                 TEMPLATE
#######################################-#######################################
template:
  - button:
      - name: "notifier_ssml_reset"
        press:
          - service: input_number.set_value
            data:
              entity_id: 
                - input_number.notifier_alexa_prosody_pitch
                - input_number.notifier_alexa_prosody_volume
              value: 0
          - service: input_number.set_value
            data:
              entity_id: input_number.notifier_alexa_prosody_rate
              value: 100
          - service: input_select.select_option
            data:
              entity_id: input_select.notifier_alexa_voice
              option: Alexa
          - service: input_select.select_option
            data:
              entity_id: input_select.notifier_alexa_language
              option: Master

  - select:
      - name: "notifier_player_alexa"
        state: "{{ state_attr('sensor.notifier_player_alexa', 'selected') | default('unknown', true) }}"
        optimistic: true
        options: |
          {{ (state_attr('sensor.notifier_config', 'alexa_media_player')
            | map('state_attr', 'friendly_name') | reject('none') | list)
          + (state_attr('sensor.notifier_config', 'alexa_group_player')
            | map('state_attr', 'friendly_name') | reject('none') | list)
          }}
        select_option:
          - variables:
              option: "{{ option }}"

  - trigger:
      - platform: state
        entity_id:
          - select.notifier_player_alexa
        not_to:
          - "unavailable"
          - "unknown"
          - "none"
    sensor:
      - name: "notifier_player_alexa"
         ## TODO namespace unique plyer comma separate
        state: >-
          {% set domains = (states.group | list) + (states.media_player | list) + (states.sensor | list) %}
          {% set player = state_attr('sensor.notifier_config', 'alexa_media_player') %}   
          {% set selected = trigger.to_state.state | lower %}
          {% for x in domains if x.name | lower == selected %}
            {% if x.domain == 'sensor' and player and x.state in player | list %}
              {{ x.state }}
            {% elif x.domain in ['group', 'media_player'] and x.attributes.entity_id is defined
                  and player and x.attributes.entity_id[0] in player | list %}
              {{ x.attributes.entity_id | join(', ') }}
            {% else %}
              {{ x.entity_id }}
            {% endif %}
          {% endfor %}
        icon: >-
          {% set status = states('select.notifier_player_alexa') 
              in integration_entities('group') | map('state_attr', 'friendly_name') %}
          {{ iif(status, 'mdi:speaker-multiple', 'mdi:speaker') }}
        attributes:
          selected: "{{ trigger.to_state.state | default }}"
          entities: >-
            {% set status = trigger.to_state.state
                in integration_entities('group') | map('state_attr', 'friendly_name') %}
            {% set group = state_attr('sensor.notifier_config', 'alexa_group_player')
                | select('is_state_attr', 'friendly_name', states('select.notifier_player_alexa'))
                | list | expand | map(attribute='entity_id') | list %}
            {% set single = expand(state_attr('sensor.notifier_config', 'alexa_media_player'))
              | selectattr('name', '==', states('select.notifier_player_alexa'))
              | map(attribute='entity_id') | list %}
            {{ iif(status, group, single) }}

  # Use modern configuration (BUG in namespace AppDaemon)
  # - binary_sensor:
  #     - name: "notifier_alexa_speak"
  #       state: "off"