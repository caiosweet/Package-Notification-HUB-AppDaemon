sensor:
  - platform: command_line
    name: HA Start
    command: grep -m1 'Home Assistant initialized' home-assistant.log | awk '{ print $6, $7, $8, $9, $10 }'
  ############################################################################
  ## In order to use sensor.ha_start, set the info logs in this way
  ############################################################################
  # logger:
  #   default: warn # or whatever you want (info, error...)
  #   logs:
  #     homeassistant.bootstrap: info

  # ClockTime
  - platform: time_date
    display_options:
      - "time"
      - "date"
      - "date_time"
      - "date_time_iso"
      - "time_date"
      - "time_utc"
      - "beat"

template:
  sensor:
    # Calcolo Giorno della settimana
    - name: Giorno della settimana
      unique_id: day_of_week
      state: >
        {{ ['lun','mar','mer','gio','ven','sab','dom'][now().weekday()] }}
      icon: >-
        mdi:{{['emoticon-dead-outline', 'emoticon-angry-outline', 'emoticon-sad-outline','emoticon-neutral-outline','emoticon-cool-outline','emoticon-excited-outline','emoticon-happy-outline'][now().weekday()] }}

      # Calcolo Giorno dopo
    - name: Domani
      unique_id: tomorrow_day_of_week
      state: >
        {{ ['mar','mer','gio','ven','sab','dom','lun'][now().weekday()] }}
      icon: >-
        mdi:{{['emoticon-angry-outline', 'emoticon-sad-outline','emoticon-neutral-outline','emoticon-cool-outline','emoticon-excited-outline','emoticon-happy-outline','emoticon-dead-outline'][now().weekday()] }}

      # Data e Ora per DarkSky package
      # {{as_local(states.sensor.time.last_updated).timestamp() | timestamp_custom('%d/%m/%Y - %H:%M')}}
    - name: Data e Ora
      unique_id: data_ora
      state: >
        {{as_timestamp(states.sensor.time.last_updated)|timestamp_custom('%d/%m/%Y - %H:%M')}}
      icon: mdi:calendar-clock
      # value_template: >
      #   {{now().strftime("%d/%m/%Y - %H:%M")}}

      # Definizione Orario Alba e Tramonto
    - name: Alba
      unique_id: sunrise_time
      state: '{% set timestamp = as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom("%H:%M") %} {{ timestamp.lstrip("0") }}'
      icon: mdi:weather-sunset-up

    - name: Tramonto
      unique_id: sunset_time
      state: '{% set timestamp = as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom("%H:%M") %} {{ timestamp.lstrip("0") }}'
      icon: mdi:weather-sunset-down
