type: custom:vertical-stack-in-card
cards:
  - type: custom:paper-buttons-row
    styles:
      background: var(--primary-color)
    buttons:
      - entity: sensor.notifier_config
        icon: mdi:account-tie
        name: '{{ states(config.entity) }}'
        styles:
          button:
            font-size: 16px
            color: var(--primary-text-color)
        tap_action:
          action: navigate
          navigation_path: centro-notifiche
  - type: conditional
    conditions:
      - entity: sensor.notifier_debug_error
        state_not: 'on'
      - entity: sensor.notifier_debug_error
        state_not: OK
    card:
      type: markdown
      card_mod:
        style: |
          ha-markdown.no-header {
            padding: 0px !important;
          }
      content: |-
        <ha-alert alert-type="error">
          <details>
            <summary>Attenzione {{ user }}, si Ã¨ verificato un errore in Notifier App</summary>
            {{states('sensor.notifier_debug_error')}}
        </details>
  - type: custom:paper-buttons-row
    styles:
      display: flex
      justify-content: space-between
    buttons:
      - entity: group.notifier_group_notification
        layout: icon
      - entity: input_boolean.notifier_speech_notifications
        layout: icon
        state_icons:
          'on': mdi:account-tie-voice
          'off': mdi:account-tie-voice-off
      - entity: input_boolean.notifier_text_notifications
        layout: icon
        state_icons:
          'off': mdi:cellphone-message-off
      - entity: input_boolean.notifier_screen_notifications
        layout: icon
        state_icons:
          'off': mdi:home-assistant
      - entity: input_boolean.notifier_guest_mode
        layout: icon
        state_icons:
          'on': mdi:account-multiple-plus
          'off': mdi:account-multiple-minus-outline
      - entity: input_boolean.notifier_priority_message
        layout: icon
        state_icons:
          'off': mdi:alarm-light-outline
      - entity: input_boolean.notifier_holidays
        layout: icon
      - entity: automation.centro_notifiche_configurazione_avvio
        layout: icon
        icon: mdi:cog
        styles:
          button:
            color: >
              {{ iif(is_state(config.entity, 'off'), 'var(--error-color)', 'var(--state-active-color)') }}
        hold_action:
          action: more-info
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Impostazioni
              content:
                type: entities
                state_color: true
                entities:
                  - entity: automation.centro_notifiche_configurazione_avvio
                  - entity: sensor.notifier_debug_error
                    name: Notifier Debug Error
                    icon: mdi:account-wrench
                  - entity: sensor.notifier_config
                  - entity: input_button.notifier_reset_config
                    tap_action:
                      action: call-service
                      service: input_button.press
                      target:
                        entity_id: input_button.notifier_reset_config
                      confirmation:
                        text: Procedo al reset della configurazione?
                  - type: button
                    icon: mdi:restart
                    entity: sensor.notifier_debug_error
                    name: Restart App
                    tap_action:
                      action: call-service
                      confirmation:
                        text: Sei sicuro di voler riavviare l'App Notifier?
                      service: script.my_notify
                      service_data:
                        ad:
                          command: restart
  - type: divider
    style:
      background-color: var(--primary-color)
      height: 1px
  - type: custom:paper-buttons-row
    styles:
      display: grid
      grid-template-columns: repeat(4, 1fr)
      font-size: 0.9em
    buttons:
      - entity: group.notifier_location_tracker
        layout: icon|name|state
        name: |
          {{ state_attr('binary_sensor.notifier_people_home', 'number') }}
        styles:
          button:
            justify-content: flex-start
            color: var(--state-person-home-color)
          icon:
            scale: 70%
        state_icons:
          not_home: mdi:home-export-outline
          home: mdi:home-import-outline
        state_styles:
          not_home:
            button:
              color: var(--red-color)
          home:
            button:
              color: var(--state-person-home-color)
        tap_action:
          action: more-info
      - entity: sensor.notifier_day_period
        layout: state
        styles:
          button:
            color: var(--info-color)
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: âŒš Orari priodo del giorno
              content:
                type: entities
                entities:
                  - input_datetime.notifier_start_early_morning
                  - input_datetime.notifier_start_morning
                  - input_datetime.notifier_start_afternoon
                  - input_datetime.notifier_start_evening
                  - input_datetime.notifier_start_night
                  - input_datetime.notifier_start_late_night
      - entity: sensor.notifier_day_period_volume
        layout: name|state
        state: '{{states(config.entity)}}%'
        name: VOL
        styles:
          button:
            color: var(--info-color)
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: ðŸŽš Volumi
              content:
                type: entities
                entities:
                  - input_number.notifier_early_morning_volume
                  - input_number.notifier_morning_volume
                  - input_number.notifier_afternoon_volume
                  - input_number.notifier_evening_volume
                  - input_number.notifier_night_volume
                  - input_number.notifier_late_night_volume
                  - input_number.notifier_intercom_volume
      - entity: binary_sensor.notifier_dnd
        layout: name|state
        name: DND
        styles:
          button:
            - color: >-
                {{ iif(states(config.entity) == 'on',  'var(--warning-color)',
                'var(--info-color)') }}
        state_icons:
          'on': mdi:minus-circle
          'off': mdi:minus-circle-off
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: ðŸ”‡ Orari non disturbare
              content:
                type: entities
                entities:
                  - input_datetime.notifier_start_weekdays
                  - input_datetime.notifier_end_weekdays
                  - input_datetime.notifier_start_holidays
                  - input_datetime.notifier_end_holidays
  - type: divider
    style:
      background-color: var(--primary-color)
      height: 1px
  - type: custom:paper-buttons-row
    styles:
      display: grid
      grid-template-columns: repeat(4, 1fr)
      font-size: 0.9em
    buttons:
      - entity: input_boolean.notifier_alexa_switch
        layout: icon|name
        name: Alexa
        styles:
          button:
            justify-content: flex-start
            color: >-
              {{ iif(is_state('binary_sensor.notifier_alexa_speak', 'on'), 
              'var(--warning-color)', '') }}
            animation: >-
              {{ iif(is_state('binary_sensor.notifier_alexa_speak', 'on'), 
              'blink 1.5s linear infinite alternate', '') }}
          icon:
            scale: 70%
        hold_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Alexa
              content:
                type: entities
                state_color: true
                entities:
                  - entity: input_boolean.notifier_alexa_switch
                    icon: mdi:dots-circle
                  - entity: select.notifier_player_alexa
                  - entity: input_select.notifier_alexa_type
                  - entity: input_select.notifier_alexa_method
                  - entity: input_boolean.notifier_alexa_smart_volume
                  - entity: binary_sensor.notifier_alexa_speak
                    icon: mdi:speaker-message
                    name: Alexa Parla
                  - type: section
                    label: SSML
                  - entity: input_boolean.notifier_alexa_ssml
                  - entity: input_select.notifier_alexa_voice
                  - entity: input_select.notifier_alexa_language
                  - entity: input_number.notifier_alexa_prosody_rate
                  - entity: input_number.notifier_alexa_prosody_pitch
                  - entity: input_number.notifier_alexa_prosody_volume
                  - entity: button.notifier_ssml_reset
                  - type: section
                    label: Info
                  - entity: sensor.notifier_player_alexa
                  - type: attribute
                    name: Entities list
                    entity: sensor.notifier_player_alexa
                    attribute: entities
                  - type: attribute
                    entity: sensor.notifier_player_alexa
                    attribute: selected
                  - entity: group.notifier_player_alexa
                  - type: attribute
                    entity: group.notifier_player_alexa
                    attribute: entity_id
                    name: Players
      - entity: select.notifier_player_alexa
        layout: state
        state:
          case: first
        state_icons:
          'on': mdi:minus-circle
          'off': mdi:minus-circle-off
        styles:
          button:
            color: var(--primary-text-color)
        tap_action:
          action: call-service
          service: select.select_next
          target:
            entity_id: select.notifier_player_alexa
          data:
            cycle: true
        double_tap_action:
          action: call-service
          service: select.select_first
          target:
            entity_id: select.notifier_player_alexa
      - entity: input_select.notifier_alexa_type
        layout: state
        state:
          case: first
        state_styles:
          announce:
            button:
              color: var(--state-active-color)
        styles:
          button:
            color: var(--primary-text-color)
        tap_action:
          action: call-service
          service: input_select.select_next
          service_data:
            entity_id: input_select.notifier_alexa_type
      - entity: sensor.notifier_player_alexa
        layout: state
        styles:
          button:
            color: var(--info-color)
          icon:
            scale: 70%
        state: >
          {{ state_attr(config.entity, 'entities') |map('state_attr',
          'volume_level') |unique |list }}
            
  - type: custom:paper-buttons-row
    styles:
      display: grid
      grid-template-columns: repeat(4, 1fr)
      font-size: 0.9em
    buttons:
      - entity: input_boolean.notifier_google_switch
        layout: icon|name
        name: Google
        styles:
          button:
            justify-content: flex-start
          icon:
            scale: 70%
        hold_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Google
              content:
                type: entities
                state_color: true
                entities:
                  - entity: input_boolean.notifier_google_switch
                  - entity: select.notifier_player_google
                  - entity: input_select.notifier_tts_notify
                  - type: section
                    label: Info
                  - entity: sensor.notifier_player_google
                  - type: attribute
                    name: Entities list
                    entity: sensor.notifier_player_google
                    attribute: entities
                  - type: attribute
                    name: Selected
                    entity: sensor.notifier_player_google
                    attribute: selected
                  - entity: group.notifier_player_google
                  - type: attribute
                    entity: group.notifier_player_google
                    attribute: entity_id
      - entity: select.notifier_player_google
        layout: state
        state:
          case: first
        styles:
          button:
            color: var(--primary-text-color)
        tap_action:
          action: call-service
          service: select.select_next
          target:
            entity_id: select.notifier_player_google
          data:
            cycle: true
        double_tap_action:
          action: call-service
          service: select.select_first
          target:
            entity_id: select.notifier_player_google
      - entity: input_select.notifier_tts_notify
        layout: icon|state
        icon: false
        state_text:
          google say: Say
          google cloud: Cloud
          google assistant: Assistant
          reverso: Reverso
        styles:
          button:
            color: var(--primary-text-color)
        tap_action:
          action: call-service
          service: input_select.select_next
          service_data:
            entity_id: input_select.notifier_tts_notify
      - entity: sensor.notifier_player_google
        layout: state
        styles:
          button:
            color: var(--info-color)
          icon:
            scale: 70%
        state: >
          {{ state_attr('sensor.notifier_player_google', 'entities')  |
          map('state_attr','volume_level')  | reject('none') |  map('round', 1)
          | list |default('OFF',true) }}
  - type: custom:paper-buttons-row
    styles:
      display: grid
      grid-template-columns: 1fr 1fr 2fr
      font-size: 0.9em
    buttons:
      - entity: input_boolean.notifier_phone_notifications
        layout: icon|name
        name: Voip
        styles:
          button:
            justify-content: flex-start
          icon:
            scale: 70%
        state_icons:
          'off': mdi:phone-off
      - entity: input_select.notifier_phone_notify
        layout: state
        state:
          case: first
        styles:
          button:
            color: var(--primary-text-color)
  - type: divider
    style:
      background-color: var(--primary-color)
      height: 1px
  - type: custom:paper-buttons-row
    styles:
      display: flex
      justify-content: space-between
      font-size: 0.9em
    buttons:
      - entity: input_boolean.notifier_text_notifications
        layout: icon|name
        name: Notify
        styles:
          button:
            justify-content: flex-start
          icon:
            scale: 70%
        state_icons:
          'off': mdi:cellphone-message-off
      - entity: select.notifier_text_notify
        layout: state
        state:
          case: first
        styles:
          button:
            justify-self: flex-start
          icon:
            color: >
              {{ iif(is_state(config.entity, 'on'), 'var(--state-active-color)',
              '') }}
          state:
            color: var(--primary-text-color)
        tap_action:
          action: call-service
          service: select.select_next
          target:
            entity_id: select.notifier_text_notify
          data:
            cycle: true
        double_tap_action:
          action: call-service
          service: select.select_first
          target:
            entity_id: select.notifier_text_notify
      - entity: input_boolean.notifier_html_mode
        layout: icon
        icon: |
          {{ iif(is_state(config.entity, 'off'), 'mdi:language-markdown', '') }}
      - entity: input_boolean.notifier_wrap_text
        layout: icon
        icon: |
          {{ iif(is_state(config.entity, 'off'), 'mdi:text-long', '') }}
      - entity: input_boolean.notifier_tts_clock
        layout: icon
  - type: divider
    style:
      background-color: var(--primary-color)
      height: 1px
  - type: entities
    card_mod:
      style: |
        ha-card {
          background:none; border-radius: 0px; box-shadow: none; 
        }
        .card-content {padding: 0px; margin: 0;}
    entities:
      - type: custom:fold-entity-row
        cickable: true
        head:
          entity: input_number.notifier_intercom_volume
          icon: mdi:bullhorn-outline
          name: Interfono
          tap_action:
            action: fire-dom-event
            fold_row: true
          extend_paper_buttons_row:
            hide_state: true
            position: right
            buttons:
              - entity: button.notifier_last_message
                layout: icon
                tap_action:
                  action: call-service
                  service: button.press
                  target:
                    entity_id: button.notifier_last_message
                styles:
                  ripple:
                    color: var(--accent-color)
        entities:
          - type: custom:lovelace-multiline-text-input-card
            card_mod:
              style: |
                ha-card {
                  background:none; border-radius: 0px; box-shadow: none; 
                  color: var(--primary-text-color);
                }
                textarea.textarea {margin: 0;}
                .card-content {padding-left: 0px;padding-top: 0px; }
            entity: input_text.notifier_intercom_message
            max_length: 255
            min_length: 1
            placeholder_text: Messaggio da inviare...
            title: ''
            buttons:
              save: true
              paste: true
              clear: true
            icons:
              save: mdi:send
              paste: mdi:content-paste
              clear: mdi:delete-forever
          - type: custom:paper-buttons-row
            styles:
              display: flex
              justify-content: space-between
            buttons:
              - entity: input_number.notifier_intercom_volume
                layout: icon|name
              - icon: mdi:volume-minus
                tap_action:
                  action: call-service
                  service: input_number.decrement
                  service_data:
                    entity_id: input_number.notifier_intercom_volume
              - entity: input_number.notifier_intercom_volume
                layout: state
                state: |
                  {{ states('input_number.notifier_intercom_volume')|int(0) }}%
              - icon: mdi:volume-plus
                tap_action:
                  action: call-service
                  service: input_number.increment
                  service_data:
                    entity_id: input_number.notifier_intercom_volume
  - type: conditional
    conditions:
      - entity: input_text.notifier_last_message
        state_not: ''
    card:
      type: markdown
      entity_id: input_text.notifier_last_message
      card_mod:
        style: |
          ha-markdown.no-header {
            padding: 0px !important;
          }
      content: |-
        <ha-alert alert-type="success">
        <details>
            <summary>Ultimo Messaggio</summary>
            {{states('input_text.notifier_last_message')}}
        </details>
        </ha-alert>
